{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _get = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountOperation = void 0;\n\nvar command_1 = require(\"./command\");\n\nvar operation_1 = require(\"./operation\");\n/** @internal */\n\n\nvar CountOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(CountOperation, _command_1$CommandOpe);\n\n  var _super = _createSuper(CountOperation);\n\n  function CountOperation(namespace, filter, options) {\n    var _this;\n\n    _classCallCheck(this, CountOperation);\n\n    _this = _super.call(this, {\n      s: {\n        namespace: namespace\n      }\n    }, options);\n    _this.options = options;\n    _this.collectionName = namespace.collection;\n    _this.query = filter;\n    return _this;\n  }\n\n  _createClass(CountOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      var options = this.options;\n      var cmd = {\n        count: this.collectionName,\n        query: this.query\n      };\n\n      if (typeof options.limit === 'number') {\n        cmd.limit = options.limit;\n      }\n\n      if (typeof options.skip === 'number') {\n        cmd.skip = options.skip;\n      }\n\n      if (options.hint != null) {\n        cmd.hint = options.hint;\n      }\n\n      if (typeof options.maxTimeMS === 'number') {\n        cmd.maxTimeMS = options.maxTimeMS;\n      }\n\n      _get(_getPrototypeOf(CountOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd, function (err, result) {\n        callback(err, result ? result.n : 0);\n      });\n    }\n  }]);\n\n  return CountOperation;\n}(command_1.CommandOperation);\n\nexports.CountOperation = CountOperation;\n(0, operation_1.defineAspects)(CountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionPoolMetrics = void 0;\n/** @internal */\n\nvar ConnectionPoolMetrics = /*#__PURE__*/function () {\n  function ConnectionPoolMetrics() {\n    _classCallCheck(this, ConnectionPoolMetrics);\n\n    this.txnConnections = 0;\n    this.cursorConnections = 0;\n    this.otherConnections = 0;\n  }\n  /**\n   * Mark a connection as pinned for a specific operation.\n   */\n\n\n  _createClass(ConnectionPoolMetrics, [{\n    key: \"markPinned\",\n    value: function markPinned(pinType) {\n      if (pinType === ConnectionPoolMetrics.TXN) {\n        this.txnConnections += 1;\n      } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n        this.cursorConnections += 1;\n      } else {\n        this.otherConnections += 1;\n      }\n    }\n    /**\n     * Unmark a connection as pinned for an operation.\n     */\n\n  }, {\n    key: \"markUnpinned\",\n    value: function markUnpinned(pinType) {\n      if (pinType === ConnectionPoolMetrics.TXN) {\n        this.txnConnections -= 1;\n      } else if (pinType === ConnectionPoolMetrics.CURSOR) {\n        this.cursorConnections -= 1;\n      } else {\n        this.otherConnections -= 1;\n      }\n    }\n    /**\n     * Return information about the cmap metrics as a string.\n     */\n\n  }, {\n    key: \"info\",\n    value: function info(maxPoolSize) {\n      return 'Timed out while checking out a connection from connection pool: ' + \"maxPoolSize: \".concat(maxPoolSize, \", \") + \"connections in use by cursors: \".concat(this.cursorConnections, \", \") + \"connections in use by transactions: \".concat(this.txnConnections, \", \") + \"connections in use by other operations: \".concat(this.otherConnections);\n    }\n    /**\n     * Reset the metrics to the initial values.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.txnConnections = 0;\n      this.cursorConnections = 0;\n      this.otherConnections = 0;\n    }\n  }]);\n\n  return ConnectionPoolMetrics;\n}();\n\nexports.ConnectionPoolMetrics = ConnectionPoolMetrics;\nConnectionPoolMetrics.TXN = 'txn';\nConnectionPoolMetrics.CURSOR = 'cursor';\nConnectionPoolMetrics.OTHER = 'other';","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _get = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidateCollectionOperation = void 0;\n\nvar error_1 = require(\"../error\");\n\nvar command_1 = require(\"./command\");\n/** @internal */\n\n\nvar ValidateCollectionOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(ValidateCollectionOperation, _command_1$CommandOpe);\n\n  var _super = _createSuper(ValidateCollectionOperation);\n\n  function ValidateCollectionOperation(admin, collectionName, options) {\n    var _this;\n\n    _classCallCheck(this, ValidateCollectionOperation);\n\n    // Decorate command with extra options\n    var command = {\n      validate: collectionName\n    };\n    var keys = Object.keys(options);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(options, keys[i]) && keys[i] !== 'session') {\n        command[keys[i]] = options[keys[i]];\n      }\n    }\n\n    _this = _super.call(this, admin.s.db, options);\n    _this.options = options;\n    _this.command = command;\n    _this.collectionName = collectionName;\n    return _this;\n  }\n\n  _createClass(ValidateCollectionOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      var collectionName = this.collectionName;\n\n      _get(_getPrototypeOf(ValidateCollectionOperation.prototype), \"executeCommand\", this).call(this, server, session, this.command, function (err, doc) {\n        if (err != null) return callback(err); // TODO(NODE-3483): Replace these with MongoUnexpectedServerResponseError\n\n        if (doc.ok === 0) return callback(new error_1.MongoRuntimeError('Error with validate command'));\n        if (doc.result != null && typeof doc.result !== 'string') return callback(new error_1.MongoRuntimeError('Error with validation data'));\n        if (doc.result != null && doc.result.match(/exception|corrupt/) != null) return callback(new error_1.MongoRuntimeError(\"Invalid collection \".concat(collectionName)));\n        if (doc.valid != null && !doc.valid) return callback(new error_1.MongoRuntimeError(\"Invalid collection \".concat(collectionName)));\n        return callback(undefined, doc);\n      });\n    }\n  }]);\n\n  return ValidateCollectionOperation;\n}(command_1.CommandOperation);\n\nexports.ValidateCollectionOperation = ValidateCollectionOperation;","map":null,"metadata":{},"sourceType":"script"}
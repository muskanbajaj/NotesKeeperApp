{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _defineProperty = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PromiseProvider = void 0;\n\nvar error_1 = require(\"./error\");\n/** @internal */\n\n\nvar kPromise = Symbol('promise');\n\nvar store = _defineProperty({}, kPromise, undefined);\n/**\n * Global promise store allowing user-provided promises\n * @public\n */\n\n\nvar PromiseProvider = /*#__PURE__*/function () {\n  function PromiseProvider() {\n    _classCallCheck(this, PromiseProvider);\n  }\n\n  _createClass(PromiseProvider, null, [{\n    key: \"validate\",\n    value:\n    /** Validates the passed in promise library */\n    function validate(lib) {\n      if (typeof lib !== 'function') throw new error_1.MongoInvalidArgumentError(\"Promise must be a function, got \".concat(lib));\n      return !!lib;\n    }\n    /** Sets the promise library */\n\n  }, {\n    key: \"set\",\n    value: function set(lib) {\n      if (!PromiseProvider.validate(lib)) {\n        // validate\n        return;\n      }\n\n      store[kPromise] = lib;\n    }\n    /** Get the stored promise library, or resolves passed in */\n\n  }, {\n    key: \"get\",\n    value: function get() {\n      return store[kPromise];\n    }\n  }]);\n\n  return PromiseProvider;\n}();\n\nexports.PromiseProvider = PromiseProvider;\nPromiseProvider.set(global.Promise);","map":null,"metadata":{},"sourceType":"script"}
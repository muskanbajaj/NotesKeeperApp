{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareDocs = exports.indexInformation = void 0;\n\nvar error_1 = require(\"../error\");\n\nvar utils_1 = require(\"../utils\");\n\nfunction indexInformation(db, name, _optionsOrCallback, _callback) {\n  var options = _optionsOrCallback;\n  var callback = _callback;\n\n  if ('function' === typeof _optionsOrCallback) {\n    callback = _optionsOrCallback;\n    options = {};\n  } // If we specified full information\n\n\n  var full = options.full == null ? false : options.full;\n  var topology;\n\n  try {\n    topology = (0, utils_1.getTopology)(db);\n  } catch (error) {\n    return callback(error);\n  } // Did the user destroy the topology\n\n\n  if (topology.isDestroyed()) return callback(new error_1.MongoTopologyClosedError()); // Process all the results from the index command and collection\n\n  function processResults(indexes) {\n    // Contains all the information\n    var info = {}; // Process all the indexes\n\n    for (var i = 0; i < indexes.length; i++) {\n      var index = indexes[i]; // Let's unpack the object\n\n      info[index.name] = [];\n\n      for (var _name in index.key) {\n        info[index.name].push([_name, index.key[_name]]);\n      }\n    }\n\n    return info;\n  } // Get the list of indexes of the specified collection\n\n\n  db.collection(name).listIndexes(options).toArray(function (err, indexes) {\n    if (err) return callback(err);\n    if (!Array.isArray(indexes)) return callback(undefined, []);\n    if (full) return callback(undefined, indexes);\n    callback(undefined, processResults(indexes));\n  });\n}\n\nexports.indexInformation = indexInformation;\n\nfunction prepareDocs(coll, docs, options) {\n  var _a;\n\n  var forceServerObjectId = typeof options.forceServerObjectId === 'boolean' ? options.forceServerObjectId : (_a = coll.s.db.options) === null || _a === void 0 ? void 0 : _a.forceServerObjectId; // no need to modify the docs if server sets the ObjectId\n\n  if (forceServerObjectId === true) {\n    return docs;\n  }\n\n  return docs.map(function (doc) {\n    if (doc._id == null) {\n      doc._id = coll.s.pkFactory.createPk();\n    }\n\n    return doc;\n  });\n}\n\nexports.prepareDocs = prepareDocs;","map":null,"metadata":{},"sourceType":"script"}
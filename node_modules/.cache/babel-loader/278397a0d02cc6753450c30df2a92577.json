{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BulkWriteOperation = void 0;\n\nvar operation_1 = require(\"./operation\");\n/** @internal */\n\n\nvar BulkWriteOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(BulkWriteOperation, _operation_1$Abstract);\n\n  var _super = _createSuper(BulkWriteOperation);\n\n  function BulkWriteOperation(collection, operations, options) {\n    var _this;\n\n    _classCallCheck(this, BulkWriteOperation);\n\n    _this = _super.call(this, options);\n    _this.options = options;\n    _this.collection = collection;\n    _this.operations = operations;\n    return _this;\n  }\n\n  _createClass(BulkWriteOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      var coll = this.collection;\n      var operations = this.operations;\n\n      var options = _objectSpread(_objectSpread(_objectSpread({}, this.options), this.bsonOptions), {}, {\n        readPreference: this.readPreference\n      }); // Create the bulk operation\n\n\n      var bulk = options.ordered === false ? coll.initializeUnorderedBulkOp(options) : coll.initializeOrderedBulkOp(options); // for each op go through and add to the bulk\n\n      try {\n        for (var i = 0; i < operations.length; i++) {\n          bulk.raw(operations[i]);\n        }\n      } catch (err) {\n        return callback(err);\n      } // Execute the bulk\n\n\n      bulk.execute(_objectSpread(_objectSpread({}, options), {}, {\n        session: session\n      }), function (err, r) {\n        // We have connection level error\n        if (!r && err) {\n          return callback(err);\n        } // Return the results\n\n\n        callback(undefined, r);\n      });\n    }\n  }]);\n\n  return BulkWriteOperation;\n}(operation_1.AbstractOperation);\n\nexports.BulkWriteOperation = BulkWriteOperation;\n(0, operation_1.defineAspects)(BulkWriteOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":null,"metadata":{},"sourceType":"script"}
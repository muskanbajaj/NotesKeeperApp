{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MongoCR = void 0;\n\nvar crypto = require(\"crypto\");\n\nvar error_1 = require(\"../../error\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar auth_provider_1 = require(\"./auth_provider\");\n\nvar MongoCR = /*#__PURE__*/function (_auth_provider_1$Auth) {\n  _inherits(MongoCR, _auth_provider_1$Auth);\n\n  var _super = _createSuper(MongoCR);\n\n  function MongoCR() {\n    _classCallCheck(this, MongoCR);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MongoCR, [{\n    key: \"auth\",\n    value: function auth(authContext, callback) {\n      var connection = authContext.connection,\n          credentials = authContext.credentials;\n\n      if (!credentials) {\n        return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n      }\n\n      var username = credentials.username;\n      var password = credentials.password;\n      var source = credentials.source;\n      connection.command((0, utils_1.ns)(\"\".concat(source, \".$cmd\")), {\n        getnonce: 1\n      }, undefined, function (err, r) {\n        var nonce = null;\n        var key = null; // Get nonce\n\n        if (err == null) {\n          nonce = r.nonce; // Use node md5 generator\n\n          var md5 = crypto.createHash('md5'); // Generate keys used for authentication\n\n          md5.update(\"\".concat(username, \":mongo:\").concat(password), 'utf8');\n          var hash_password = md5.digest('hex'); // Final key\n\n          md5 = crypto.createHash('md5');\n          md5.update(nonce + username + hash_password, 'utf8');\n          key = md5.digest('hex');\n        }\n\n        var authenticateCommand = {\n          authenticate: 1,\n          user: username,\n          nonce: nonce,\n          key: key\n        };\n        connection.command((0, utils_1.ns)(\"\".concat(source, \".$cmd\")), authenticateCommand, undefined, callback);\n      });\n    }\n  }]);\n\n  return MongoCR;\n}(auth_provider_1.AuthProvider);\n\nexports.MongoCR = MongoCR;","map":null,"metadata":{},"sourceType":"script"}
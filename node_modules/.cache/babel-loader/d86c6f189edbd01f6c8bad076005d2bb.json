{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _get = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RenameOperation = void 0;\n\nvar collection_1 = require(\"../collection\");\n\nvar error_1 = require(\"../error\");\n\nvar utils_1 = require(\"../utils\");\n\nvar operation_1 = require(\"./operation\");\n\nvar run_command_1 = require(\"./run_command\");\n/** @internal */\n\n\nvar RenameOperation = /*#__PURE__*/function (_run_command_1$RunAdm) {\n  _inherits(RenameOperation, _run_command_1$RunAdm);\n\n  var _super = _createSuper(RenameOperation);\n\n  function RenameOperation(collection, newName, options) {\n    var _this;\n\n    _classCallCheck(this, RenameOperation);\n\n    // Check the collection name\n    (0, utils_1.checkCollectionName)(newName); // Build the command\n\n    var renameCollection = collection.namespace;\n    var toCollection = collection.s.namespace.withCollection(newName).toString();\n    var dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n    var cmd = {\n      renameCollection: renameCollection,\n      to: toCollection,\n      dropTarget: dropTarget\n    };\n    _this = _super.call(this, collection, cmd, options);\n    _this.options = options;\n    _this.collection = collection;\n    _this.newName = newName;\n    return _this;\n  }\n\n  _createClass(RenameOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      var _this2 = this;\n\n      var coll = this.collection;\n\n      _get(_getPrototypeOf(RenameOperation.prototype), \"execute\", this).call(this, server, session, function (err, doc) {\n        if (err) return callback(err); // We have an error\n\n        if (doc === null || doc === void 0 ? void 0 : doc.errmsg) {\n          return callback(new error_1.MongoServerError(doc));\n        }\n\n        var newColl;\n\n        try {\n          newColl = new collection_1.Collection(coll.s.db, _this2.newName, coll.s.options);\n        } catch (err) {\n          return callback(err);\n        }\n\n        return callback(undefined, newColl);\n      });\n    }\n  }]);\n\n  return RenameOperation;\n}(run_command_1.RunAdminCommandOperation);\n\nexports.RenameOperation = RenameOperation;\n(0, operation_1.defineAspects)(RenameOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":null,"metadata":{},"sourceType":"script"}
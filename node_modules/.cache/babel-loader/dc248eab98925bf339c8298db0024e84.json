{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReceiveBuffer = void 0;\n\nvar ReceiveBuffer = /*#__PURE__*/function () {\n  function ReceiveBuffer() {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4096;\n\n    _classCallCheck(this, ReceiveBuffer);\n\n    this.buffer = Buffer.allocUnsafe(size);\n    this.offset = 0;\n    this.originalSize = size;\n  }\n\n  _createClass(ReceiveBuffer, [{\n    key: \"length\",\n    get: function get() {\n      return this.offset;\n    }\n  }, {\n    key: \"append\",\n    value: function append(data) {\n      if (!Buffer.isBuffer(data)) {\n        throw new Error('Attempted to append a non-buffer instance to ReceiveBuffer.');\n      }\n\n      if (this.offset + data.length >= this.buffer.length) {\n        var tmp = this.buffer;\n        this.buffer = Buffer.allocUnsafe(Math.max(this.buffer.length + this.originalSize, this.buffer.length + data.length));\n        tmp.copy(this.buffer);\n      }\n\n      data.copy(this.buffer, this.offset);\n      return this.offset += data.length;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(length) {\n      if (length > this.offset) {\n        throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n      }\n\n      return this.buffer.slice(0, length);\n    }\n  }, {\n    key: \"get\",\n    value: function get(length) {\n      if (length > this.offset) {\n        throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n      }\n\n      var value = Buffer.allocUnsafe(length);\n      this.buffer.slice(0, length).copy(value);\n      this.buffer.copyWithin(0, length, length + this.offset - length);\n      this.offset -= length;\n      return value;\n    }\n  }]);\n\n  return ReceiveBuffer;\n}();\n\nexports.ReceiveBuffer = ReceiveBuffer;","map":null,"metadata":{},"sourceType":"script"}
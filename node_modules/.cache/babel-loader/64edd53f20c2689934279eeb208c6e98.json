{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _get = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProfilingLevelOperation = void 0;\n\nvar error_1 = require(\"../error\");\n\nvar command_1 = require(\"./command\");\n/** @internal */\n\n\nvar ProfilingLevelOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(ProfilingLevelOperation, _command_1$CommandOpe);\n\n  var _super = _createSuper(ProfilingLevelOperation);\n\n  function ProfilingLevelOperation(db, options) {\n    var _this;\n\n    _classCallCheck(this, ProfilingLevelOperation);\n\n    _this = _super.call(this, db, options);\n    _this.options = options;\n    return _this;\n  }\n\n  _createClass(ProfilingLevelOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      _get(_getPrototypeOf(ProfilingLevelOperation.prototype), \"executeCommand\", this).call(this, server, session, {\n        profile: -1\n      }, function (err, doc) {\n        if (err == null && doc.ok === 1) {\n          var was = doc.was;\n          if (was === 0) return callback(undefined, 'off');\n          if (was === 1) return callback(undefined, 'slow_only');\n          if (was === 2) return callback(undefined, 'all'); // TODO(NODE-3483)\n\n          return callback(new error_1.MongoRuntimeError(\"Illegal profiling level value \".concat(was)));\n        } else {\n          // TODO(NODE-3483): Consider MongoUnexpectedServerResponseError\n          err != null ? callback(err) : callback(new error_1.MongoRuntimeError('Error with profile command'));\n        }\n      });\n    }\n  }]);\n\n  return ProfilingLevelOperation;\n}(command_1.CommandOperation);\n\nexports.ProfilingLevelOperation = ProfilingLevelOperation;","map":null,"metadata":{},"sourceType":"script"}
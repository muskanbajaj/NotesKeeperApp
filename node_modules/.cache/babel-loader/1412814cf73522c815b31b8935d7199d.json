{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _get = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListDatabasesOperation = void 0;\n\nvar utils_1 = require(\"../utils\");\n\nvar command_1 = require(\"./command\");\n\nvar operation_1 = require(\"./operation\");\n/** @internal */\n\n\nvar ListDatabasesOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(ListDatabasesOperation, _command_1$CommandOpe);\n\n  var _super = _createSuper(ListDatabasesOperation);\n\n  function ListDatabasesOperation(db, options) {\n    var _this;\n\n    _classCallCheck(this, ListDatabasesOperation);\n\n    _this = _super.call(this, db, options);\n    _this.options = options !== null && options !== void 0 ? options : {};\n    _this.ns = new utils_1.MongoDBNamespace('admin', '$cmd');\n    return _this;\n  }\n\n  _createClass(ListDatabasesOperation, [{\n    key: \"execute\",\n    value: function execute(server, session, callback) {\n      var cmd = {\n        listDatabases: 1\n      };\n\n      if (this.options.nameOnly) {\n        cmd.nameOnly = Number(cmd.nameOnly);\n      }\n\n      if (this.options.filter) {\n        cmd.filter = this.options.filter;\n      }\n\n      if (typeof this.options.authorizedDatabases === 'boolean') {\n        cmd.authorizedDatabases = this.options.authorizedDatabases;\n      } // we check for undefined specifically here to allow falsy values\n      // eslint-disable-next-line no-restricted-syntax\n\n\n      if ((0, utils_1.maxWireVersion)(server) >= 9 && this.options.comment !== undefined) {\n        cmd.comment = this.options.comment;\n      }\n\n      _get(_getPrototypeOf(ListDatabasesOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd, callback);\n    }\n  }]);\n\n  return ListDatabasesOperation;\n}(command_1.CommandOperation);\n\nexports.ListDatabasesOperation = ListDatabasesOperation;\n(0, operation_1.defineAspects)(ListDatabasesOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);","map":null,"metadata":{},"sourceType":"script"}
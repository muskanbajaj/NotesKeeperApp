{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\muska\\\\OneDrive\\\\Desktop\\\\NotesApp\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.X509 = void 0;\n\nvar error_1 = require(\"../../error\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar auth_provider_1 = require(\"./auth_provider\");\n\nvar X509 = /*#__PURE__*/function (_auth_provider_1$Auth) {\n  _inherits(X509, _auth_provider_1$Auth);\n\n  var _super = _createSuper(X509);\n\n  function X509() {\n    _classCallCheck(this, X509);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(X509, [{\n    key: \"prepare\",\n    value: function prepare(handshakeDoc, authContext, callback) {\n      var credentials = authContext.credentials;\n\n      if (!credentials) {\n        return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n      }\n\n      Object.assign(handshakeDoc, {\n        speculativeAuthenticate: x509AuthenticateCommand(credentials)\n      });\n      callback(undefined, handshakeDoc);\n    }\n  }, {\n    key: \"auth\",\n    value: function auth(authContext, callback) {\n      var connection = authContext.connection;\n      var credentials = authContext.credentials;\n\n      if (!credentials) {\n        return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n      }\n\n      var response = authContext.response;\n\n      if (response && response.speculativeAuthenticate) {\n        return callback();\n      }\n\n      connection.command((0, utils_1.ns)('$external.$cmd'), x509AuthenticateCommand(credentials), undefined, callback);\n    }\n  }]);\n\n  return X509;\n}(auth_provider_1.AuthProvider);\n\nexports.X509 = X509;\n\nfunction x509AuthenticateCommand(credentials) {\n  var command = {\n    authenticate: 1,\n    mechanism: 'MONGODB-X509'\n  };\n\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n\n  return command;\n}","map":null,"metadata":{},"sourceType":"script"}